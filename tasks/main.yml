---
- name: Get home directory of kodi user
  ansible.builtin.getent:
    database: passwd
    key: "{{ kodi_os_user }}"
  ignore_errors: "{{ ansible_check_mode }}"

- name: Set home directory var for kodi user
  ansible.builtin.set_fact:
    kodi_os_user_home: "{{ getent_passwd[kodi_os_user][4] }}"
  ignore_errors: "{{ ansible_check_mode }}"

- name: Lookup user home and group
  ansible.builtin.set_fact:
    kodi_os_user_group: "{{ lookup('pipe', 'id -gn') }}"
  become: true
  become_user: "{{ kodi_os_user }}"

- name: Setting kodi directory to home of kodi user
  ansible.builtin.set_fact:
    kodi_path: "{{ kodi_os_user_home }}"
    kodi_scripts_path: /usr/local/bin
    kodi_background_path: /usr/local/share/kodi_background
    kodi_systemd_location: /etc/systemd/system/
  when:
    - kodi_os_user | length > 0
    - ansible_distribution != "LibreELEC"

- name: Setting kodi variables for openelec
  ansible.builtin.set_fact:
    kodi_path: /storage
    kodi_os_user: root
    kodi_os_user_group: root
  when: ansible_distribution == "LibreELEC"

- name: Setting kodi path variables for openelec
  ansible.builtin.set_fact:
    kodi_scripts_path: "{{ kodi_path }}"
    kodi_background_path: "{{ kodi_path }}/background_images"
    kodi_systemd_location: "{{ kodi_path }}/.config/system.d"
  when: ansible_distribution == "LibreELEC"

- name: Install kodi on ubuntu
  when: ansible_distribution != "LibreELEC"
  block:
    # install package on ubuntu hosts as flatpak since the PPA is abandoned

    - name: Setting kodi user data directory for flatpak
      ansible.builtin.set_fact:
        kodi_data_dir: ".var/app/tv.kodi.Kodi/data/userdata"

    - name: Ensure no kodi package is installed from apt sources
      ansible.builtin.package:
        name: kodi
        state: absent
      become: true
      become_user: root

    - name: Remove legacy apt list file
      ansible.builtin.file:
        path: /etc/apt/sources.list.d/ppa_team_xbmc_ppa_jammy.list
        state: absent
      become: true
      become_user: root

    - name: Remove legacy apt source file
      ansible.builtin.file:
        path: /etc/apt/sources.list.d/kodi-ppa.source
        state: absent
      become: true
      become_user: root

    - name: Ensure flatpak is installed
      ansible.builtin.package:
        name: flatpak
        state: present
      become: true
      become_user: root

    - name: Enable the flathub remote in the system installation
      community.general.flatpak_remote:
        name: flathub
        state: present
        enabled: true
        flatpakrepo_url: https://dl.flathub.org/repo/flathub.flatpakrepo
      become: true
      become_user: root

    - name: Install Kodi
      community.general.flatpak:
        name: tv.kodi.Kodi
        state: present
        remote: flathub
      become: true
      become_user: root

  rescue:
    - name: Show rescue debug message
      ansible.builtin.debug:
        msg: "Kodi not available on this Ubuntu release"

- name: Create config directory
  ansible.builtin.file:
    path: "{{ kodi_path }}/{{ kodi_data_dir }}/"
    state: directory
    mode: "0755"
    owner: "{{ kodi_os_user }}"
    group: "{{ kodi_os_user_group }}"
  become: true
  become_user: root

- name: Put kodi configuration in place
  ansible.builtin.template:
    src: advancedsettings.xml.jinja2
    dest: "{{ kodi_path }}/{{ kodi_data_dir }}/advancedsettings.xml"
    owner: "{{ kodi_os_user }}"
    group: "{{ kodi_os_user_group }}"
    mode: "0644"
  become: true
  become_user: root

- name: Put kodi sources configuration in place
  ansible.builtin.template:
    src: sources.xml.jinja2
    dest: "{{ kodi_path }}/{{ kodi_data_dir }}/sources.xml"
    owner: "{{ kodi_os_user }}"
    group: "{{ kodi_os_user_group }}"
    mode: "0644"
  become: true
  become_user: root

- name: Ensure background images folder
  ansible.builtin.file:
    path: "{{ kodi_background_path }}"
    owner: root
    group: root
    mode: "0750"
    state: directory
  become: true
  become_user: root

- name: Putting background images in place
  ansible.builtin.copy:
    src: "{{ kodi_bg_images_src_path }}"
    dest: "{{ kodi_background_path }}"
    owner: root
    group: root
    mode: "0644"
  become: true
  become_user: root

- name: Install background changer script
  ansible.builtin.template:
    src: kodi_bg_changer.sh.jinja2
    dest: "{{ kodi_scripts_path }}/kodi_bg_changer.sh"
    owner: root
    group: root
    mode: "0750"
  become: true
  become_user: root

- name: Deploy systemctl background changer systemd unit
  ansible.builtin.template:
    src: kodi_bg_changer.service.jinja2
    dest: "{{ kodi_systemd_location }}/kodi_bg_changer.service"
    owner: root
    group: root
    mode: "0644"
  become: true
  become_user: root

- name: Deploy systemctl background changer systemd unit timer
  ansible.builtin.template:
    src: kodi_bg_changer.timer.jinja2
    dest: "{{ kodi_systemd_location }}/kodi_bg_changer.timer"
    owner: root
    group: root
    mode: "0644"
  become: true
  become_user: root

- name: Enable systemctl background changer systemd unit timer
  ansible.builtin.systemd:
    name: "kodi_bg_changer.timer"
    daemon_reload: true
    state: started
    enabled: true
  become: true
  become_user: root
