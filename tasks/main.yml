---
# set kodi user var
- name: "Setting default kodi user to {{ kodi.os_user }}"
  ansible.builtin.set_fact:
    kodi_os_user: "{{ kodi.os_user }}"
  when: kodi_os_user is undefined

- name: Setting kodi user to root fot openelec
  ansible.builtin.set_fact:
    kodi_os_user: "root"
  when: ansible_distribution == "LibreELEC"

- name: Install kodi on ubuntu
  when: ansible_distribution == "Ubuntu"
  block:
    # install package on ubuntu hosts
    - name: Remove legacy apt file
      ansible.builtin.file:
        path: /etc/apt/sources.list.d/ppa_team_xbmc_ppa_hirsute.list
        state: absent

    - name: Remove legacy apt file
      ansible.builtin.file:
        path: /etc/apt/sources.list.d/ppa_team_xbmc_ppa_jammy.list
        state: absent

    - name: Add Kodi repo using key from URL
      ansible.builtin.deb822_repository:
        name: kodi-ppa
        types: [deb, deb-src]
        uris: https://ppa.launchpadcontent.net/team-xbmc/ppa/ubuntu
        suites: ["{{ ansible_distribution_release|lower }}"]
        components: [main]
        signed_by: "https://keyserver.ubuntu.com/pks/lookup?op=get&search=0x189701DA570C56B9488EF60A6D975C4791E7EE5E"
        state: present
        enabled: true

    - name: Install Kodi
      ansible.builtin.package:
        name: kodi
        state: present
  rescue:
    - name: Show rescue debug message
      ansible.builtin.debug:
        msg: "Kodi not available on this Ubuntu release"

# set things for raspian and xbian
- name: "Setting kodi directory to /home/{{ kodi_os_user }}"
  ansible.builtin.set_fact:
    kodi_path: "/home/{{ kodi_os_user }}"
  when: ansible_distribution != "LibreELEC"

# set things for openelec
- name: "Setting kodi directory to /storage for openelec"
  ansible.builtin.set_fact:
    kodi_path: "/storage"
  when: ansible_distribution == "LibreELEC"

- name: Create config directory
  ansible.builtin.file:
    path: "{{ kodi_path }}/.kodi/userdata/"
    state: directory
    mode: "0755"
    owner: "{{ kodi_os_user }}"
    group: "{{ kodi_os_user }}"

- name: Put kodi configuration in place
  ansible.builtin.template:
    src: advancedsettings.xml.jinja2
    dest: "{{ kodi_path }}/.kodi/userdata/advancedsettings.xml"
    owner: "{{ kodi_os_user }}"
    group: "{{ kodi_os_user }}"
    mode: "0644"

- name: Put kodi sources configuration in place
  ansible.builtin.template:
    src: sources.xml.jinja2
    dest: "{{ kodi_path }}/.kodi/userdata/sources.xml"
    owner: "{{ kodi_os_user }}"
    group: "{{ kodi_os_user }}"
    mode: "0644"

- name: Ensure background images folder
  ansible.builtin.file:
    path: "{{ kodi_path }}/background_images/"
    owner: "{{ kodi_os_user }}"
    group: "{{ kodi_os_user }}"
    mode: "0750"
    state: directory

- name: Putting background images in place
  ansible.builtin.copy:
    src: "{{ playbook_dir }}/files/kodi_background_images/"
    dest: "{{ kodi_path }}/background_images/"
    owner: "{{ kodi_os_user }}"
    group: "{{ kodi_os_user }}"
    mode: "0644"

- name: Ensure scripts folder
  ansible.builtin.file:
    path: "{{ kodi_path }}/scripts/"
    owner: "{{ kodi_os_user }}"
    group: "{{ kodi_os_user }}"
    mode: "0750"
    state: directory

- name: Install background changer script
  ansible.builtin.template:
    src: xbmc_bg_changer.sh.jinja2
    dest: "{{ kodi_path }}/scripts/xbmc_bg_changer.sh"
    owner: "{{ kodi_os_user }}"
    group: "{{ kodi_os_user }}"
    mode: "0750"

- name: Ensure background changer script in cron.hourly
  ansible.builtin.file:
    src: "{{ kodi_path }}/scripts/xbmc_bg_changer.sh"
    dest: /etc/cron.hourly/xbmc_bg_changer
    owner: "{{ kodi_os_user }}"
    group: "{{ kodi_os_user }}"
    state: link
  when: ansible_distribution != "LibreELEC"
  ignore_errors: "{{ ansible_check_mode }}"
